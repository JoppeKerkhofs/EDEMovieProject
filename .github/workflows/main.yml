name: Build and deliver containers

on:
  push:
    branches:
      - "main"

jobs:
  actorservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver actor-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
      
      - name: Build, test and package project
        working-directory: ./actor-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKERHUB_USER }}/actor-service:latest ./actor-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKERHUB_USER }}/actor-service:latest
  cinemaservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver cinema-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./cinema-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKERHUB_USER }}/cinema-service:latest ./cinema-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKERHUB_USER }}/cinema-service:latest
  movieservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver movie-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
        
      - name: Build, test and package project
        working-directory: ./movie-service
        run: mvn package -B
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKERHUB_USER }}/movie-service:latest ./movie-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKERHUB_USER }}/movie-service:latest
  ratingservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver rating-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
        
      - name: Build, test and package project
        working-directory: ./rating-service
        run: mvn package -B
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKERHUB_USER }}/rating-service:latest ./rating-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKERHUB_USER }}/rating-service:latest
  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver ede-api-gateway container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./api-gateway
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        run: docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKERHUB_USER }}/ede-api-gateway:latest ./api-gateway

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKERHUB_USER }}/ede-api-gateway:latest
